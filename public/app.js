class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      checkout: false,
      form: 1
    };
    this.toggleCheckout = this.toggleCheckout.bind(this);
    this.nextForm = this.nextForm.bind(this);
    this.backToHome = this.backToHome.bind(this);
    this.resetForm = this.resetForm.bind(this);
  }

  toggleCheckout() {
    this.setState({
      checkout: !this.state.checkout
    });
  }

  backToHome() {
    this.setState({
      form: 1
    });
    this.toggleCheckout();
  }

  nextForm() {
    this.resetForm();
    this.setState({
      form: this.state.form + 1
    });
  }

  resetForm() {
    Array.from(document.querySelectorAll('input')).forEach(input => input.value = '');
  }

  render() {
    const {
      form,
      checkout
    } = this.state;
    const {
      nextForm,
      backToHome,
      toggleCheckout
    } = this;
    return /*#__PURE__*/React.createElement(React.Fragment, null, checkout ? /*#__PURE__*/React.createElement(ProcessForms, {
      form: form,
      nextForm: nextForm,
      backToHome: backToHome
    }) : /*#__PURE__*/React.createElement("button", {
      onClick: () => {
        toggleCheckout();
      }
    }, "checkout"));
  }

}

const ProcessForms = ({
  form,
  nextForm,
  backToHome
}) => /*#__PURE__*/React.createElement(React.Fragment, null, form === 1 ? /*#__PURE__*/React.createElement("form", {
  action: "/submit_form"
}, /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "name",
  placeholder: "Name"
}), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "email",
  placeholder: "Email"
}), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "password",
  placeholder: "Password"
})) : form === 2 ? /*#__PURE__*/React.createElement("form", {
  action: "/submit_form"
}, /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "address1",
  placeholder: "Address Line 1"
}), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "address2",
  placeholder: "Address line 2"
}), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "city",
  placeholder: "City"
}), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "state",
  placeholder: "State"
}), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "zip-code",
  placeholder: "Zip Code"
})) : form === 3 ? /*#__PURE__*/React.createElement("form", {
  action: "/submit_form"
}, /*#__PURE__*/React.createElement("label", null, "DO NOT ACTUALLY PUT YOUR CARD INFO HERE"), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "credit-card",
  placeholder: "Credit Card #"
}), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "exp-date",
  placeholder: "Expiration Date"
}), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "cvv",
  placeholder: "CVV"
}), /*#__PURE__*/React.createElement("input", {
  type: "text",
  name: "billing",
  placeholder: "Billing Zip Code"
})) : null, /*#__PURE__*/React.createElement("button", {
  onClick: () => form === 3 ? backToHome() : nextForm()
}, "Next"));

ReactDOM.render( /*#__PURE__*/React.createElement(App, null), document.getElementById('app'));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9hcHAuanN4Il0sIm5hbWVzIjpbIkFwcCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwiY2hlY2tvdXQiLCJmb3JtIiwidG9nZ2xlQ2hlY2tvdXQiLCJiaW5kIiwibmV4dEZvcm0iLCJiYWNrVG9Ib21lIiwicmVzZXRGb3JtIiwic2V0U3RhdGUiLCJBcnJheSIsImZyb20iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiaW5wdXQiLCJ2YWx1ZSIsInJlbmRlciIsIlByb2Nlc3NGb3JtcyIsIlJlYWN0RE9NIiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQU4sU0FBa0JDLEtBQUssQ0FBQ0MsU0FBeEIsQ0FBa0M7QUFDaENDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUFRO0FBQ2pCLFVBQU1BLEtBQU47QUFDQSxTQUFLQyxLQUFMLEdBQWE7QUFDWEMsTUFBQUEsUUFBUSxFQUFFLEtBREM7QUFFWEMsTUFBQUEsSUFBSSxFQUFFO0FBRkssS0FBYjtBQUtBLFNBQUtDLGNBQUwsR0FBc0IsS0FBS0EsY0FBTCxDQUFvQkMsSUFBcEIsQ0FBeUIsSUFBekIsQ0FBdEI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCLEtBQUtBLFFBQUwsQ0FBY0QsSUFBZCxDQUFtQixJQUFuQixDQUFoQjtBQUNBLFNBQUtFLFVBQUwsR0FBa0IsS0FBS0EsVUFBTCxDQUFnQkYsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBbEI7QUFDQSxTQUFLRyxTQUFMLEdBQWlCLEtBQUtBLFNBQUwsQ0FBZUgsSUFBZixDQUFvQixJQUFwQixDQUFqQjtBQUNEOztBQUVERCxFQUFBQSxjQUFjLEdBQUc7QUFDZixTQUFLSyxRQUFMLENBQWM7QUFDWlAsTUFBQUEsUUFBUSxFQUFFLENBQUMsS0FBS0QsS0FBTCxDQUFXQztBQURWLEtBQWQ7QUFHRDs7QUFFREssRUFBQUEsVUFBVSxHQUFHO0FBQ1gs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RUFBQSxJQUFJLEVBQUMsTUFBWjtBQUFtQixFQUFBLElBQUksRUFBQyxVQUF4QjtBQUFtQyxFQUFBLFdBQVcsRUFBQztBQUEvQyxFQUhBLGVBSUE7QUFBTyxFQUFBLElBQUksRUFBQyxNQUFaO0FBQW1CLEVBQUEsSUFBSSxFQUFDLEtBQXhCO0FBQThCLEVBQUEsV0FBVyxFQUFDO0FBQTFDLEVBSkEsZUFLQTtBQUFPLEVBQUEsSUFBSSxFQUFDLE1BQVo7QUFBbUIsRUFBQSxJQUFJLEVBQUMsU0FBeEI7QUFBa0MsRUFBQSxXQUFXLEVBQUM7QUFBOUMsRUFMQSxDQURGLEdBUUUsSUF4QlosZUEwQkU7QUFBUSxFQUFBLE9BQU8sRUFBRSxNQUNmQSxJQUFJLEtBQUssQ0FBVCxHQUFhSSxVQUFVLEVBQXZCLEdBQTRCRCxRQUFRO0FBRHRDLFVBMUJGLENBREY7O0FBaUNBYSxRQUFRLENBQUNGLE1BQVQsZUFDRSxvQkFBQyxHQUFELE9BREYsRUFFRUwsUUFBUSxDQUFDUSxjQUFULENBQXdCLEtBQXhCLENBRkYiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgY2hlY2tvdXQ6IGZhbHNlLFxuICAgICAgZm9ybTogMVxuICAgIH1cblxuICAgIHRoaXMudG9nZ2xlQ2hlY2tvdXQgPSB0aGlzLnRvZ2dsZUNoZWNrb3V0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5uZXh0Rm9ybSA9IHRoaXMubmV4dEZvcm0uYmluZCh0aGlzKTtcbiAgICB0aGlzLmJhY2tUb0hvbWUgPSB0aGlzLmJhY2tUb0hvbWUuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlc2V0Rm9ybSA9IHRoaXMucmVzZXRGb3JtLmJpbmQodGhpcyk7XG4gIH1cblxuICB0b2dnbGVDaGVja291dCgpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGNoZWNrb3V0OiAhdGhpcy5zdGF0ZS5jaGVja291dFxuICAgIH0pXG4gIH1cblxuICBiYWNrVG9Ib21lKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZm9ybTogMVxuICAgIH0pXG4gICAgdGhpcy50b2dnbGVDaGVja291dCgpO1xuICB9XG5cbiAgbmV4dEZvcm0oKSB7XG4gICAgdGhpcy5yZXNldEZvcm0oKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGZvcm06IHRoaXMuc3RhdGUuZm9ybSArIDFcbiAgICB9KVxuICB9XG5cbiAgcmVzZXRGb3JtKCkge1xuICAgIEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQnKSkuZm9yRWFjaChpbnB1dCA9PiBpbnB1dC52YWx1ZSA9ICcnKTtcbiAgfVxuXG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgZm9ybSwgY2hlY2tvdXQgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgeyBuZXh0Rm9ybSwgYmFja1RvSG9tZSwgdG9nZ2xlQ2hlY2tvdXQgfSA9IHRoaXM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAge1xuICAgICAgICAgIGNoZWNrb3V0XG4gICAgICAgICAgICA/IDxQcm9jZXNzRm9ybXNcbiAgICAgICAgICAgICAgZm9ybT17Zm9ybX1cbiAgICAgICAgICAgICAgbmV4dEZvcm09e25leHRGb3JtfVxuICAgICAgICAgICAgICBiYWNrVG9Ib21lPXtiYWNrVG9Ib21lfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDogPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgIHRvZ2dsZUNoZWNrb3V0KCk7XG4gICAgICAgICAgICB9fT5jaGVja291dDwvYnV0dG9uPlxuICAgICAgICB9XG4gICAgICA8Lz5cbiAgICApXG4gIH1cbn1cblxuY29uc3QgUHJvY2Vzc0Zvcm1zID0gKHsgZm9ybSwgbmV4dEZvcm0sIGJhY2tUb0hvbWUgfSkgPT5cbiAgPD5cbiAgICB7XG4gICAgICBmb3JtID09PSAxXG4gICAgICAgID8gPGZvcm0gYWN0aW9uPVwiL3N1Ym1pdF9mb3JtXCI+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cIm5hbWVcIiBwbGFjZWhvbGRlcj1cIk5hbWVcIiAvPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJlbWFpbFwiIHBsYWNlaG9sZGVyPVwiRW1haWxcIiAvPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJwYXNzd29yZFwiIHBsYWNlaG9sZGVyPVwiUGFzc3dvcmRcIiAvPlxuICAgICAgICA8L2Zvcm0+XG4gICAgICAgIDogZm9ybSA9PT0gMlxuICAgICAgICAgID8gPGZvcm0gYWN0aW9uPVwiL3N1Ym1pdF9mb3JtXCI+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwiYWRkcmVzczFcIiBwbGFjZWhvbGRlcj1cIkFkZHJlc3MgTGluZSAxXCIgLz5cbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJhZGRyZXNzMlwiIHBsYWNlaG9sZGVyPVwiQWRkcmVzcyBsaW5lIDJcIiAvPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImNpdHlcIiBwbGFjZWhvbGRlcj1cIkNpdHlcIiAvPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInN0YXRlXCIgcGxhY2Vob2xkZXI9XCJTdGF0ZVwiIC8+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwiemlwLWNvZGVcIiBwbGFjZWhvbGRlcj1cIlppcCBDb2RlXCIgLz5cbiAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgOiBmb3JtID09PSAzXG4gICAgICAgICAgICA/IDxmb3JtIGFjdGlvbj1cIi9zdWJtaXRfZm9ybVwiPlxuICAgICAgICAgICAgICA8bGFiZWw+RE8gTk9UIEFDVFVBTExZIFBVVCBZT1VSIENBUkQgSU5GTyBIRVJFPC9sYWJlbD5cbiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImNyZWRpdC1jYXJkXCIgcGxhY2Vob2xkZXI9XCJDcmVkaXQgQ2FyZCAjXCIgLz5cbiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImV4cC1kYXRlXCIgcGxhY2Vob2xkZXI9XCJFeHBpcmF0aW9uIERhdGVcIiAvPlxuICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwiY3Z2XCIgcGxhY2Vob2xkZXI9XCJDVlZcIiAvPlxuICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwiYmlsbGluZ1wiIHBsYWNlaG9sZGVyPVwiQmlsbGluZyBaaXAgQ29kZVwiIC8+XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgICA6IG51bGxcbiAgICB9XG4gICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PlxuICAgICAgZm9ybSA9PT0gMyA/IGJhY2tUb0hvbWUoKSA6IG5leHRGb3JtKClcbiAgICB9Pk5leHQ8L2J1dHRvbj5cbiAgPC8+XG5cblxuUmVhY3RET00ucmVuZGVyKFxuICA8QXBwIC8+LFxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJylcbikiXX0=